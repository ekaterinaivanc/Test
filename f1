#include <iostream>

int ** create (size_t rows, size_t cols);
void remove (int ** m, size_t rows);
void input (int ** m, size_t rows, size_t cols);
void output (const int * const * m, size_t rows, size_t cols);

int ** convert (const int * t, size_t n, const size_t * lns, size_t rows) {
    if (t == nullptr || lns == nullptr || rows == 0) {
        return nullptr;
    }
    size_t sum = 0;
    for (size_t i = 0; i < rows; ++i){
        sum += lns [i];
    }
        if (sum != n){
            return nullptr;
        }
        int ** result = new int * [rows];
        size_t i = 0;
    size_t c = 0;
    try {
        for (size_t i = 0; i < rows; ++i){
            result [i] = new int [lns [i]];
            for (size_t j = 0; j < lns[i]; ++j){
                result [i][j] = t [c++];
            }
            n = n - lns[i];
        }
        return result;
    }
    catch (...) {
        remove (result, i);
        throw;
    }
}

void input (int ** m, size_t rows, size_t cols) {
    for (size_t i = 0; i < rows && (std::cin); ++i) {
        for (size_t j = 0; j < cols && (std::cin); ++j) {
            std::cin >> m[i][j];
        }
    }
}

void output (const int * const * m, size_t rows, size_t cols) {
    for (size_t i = 0; i < rows; ++i) {
        for (size_t j = 0; j < cols - 1; ++j) {
            std::cout << m[i][j] << " ";
        }
        std::cout << m[i][cols-1] << "\n";
    }
}

void remove (int ** m, size_t rows) {
    for (size_t i = 0; i < rows; ++i) {
        delete [] m[i];
    }
    delete [] m;
}

int ** create (size_t rows, size_t cols) {
    //int ** result = nullptr;
    //result = new int * [rows];
    int ** result = new int * [rows];
    size_t i = 0;
    try {
        for (; i < rows; ++i){
            result[i]= new int [cols];
        }
    }
    catch (...) {
        remove (result, i);
        throw;
    }
    return result;
}

int main () {
    size_t rows = 0, cols = 0;
    std::cin >> rows >> cols;
    if (!std::cin) {
        return 1;
    }
    int ** m = create (rows, cols);
    //
    input (m, rows, cols);
    if (!std::cin){
        remove (m, rows);
        return 1;
    }
    output (m, rows, cols);
    remove (m, rows);
    std::cout << "\n";
}